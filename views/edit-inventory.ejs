<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Edit Inventory Item</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f8ff;
            margin: 0;
            padding: 0;
        }
        h1 {
            text-align: center;
            color: #333;
            margin-top: 20px;
        }
        form {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
        }
        label {
            font-weight: bold;
            display: inline-block;
            width: 150px;
            margin-top: 10px;
        }
        input[type="text"],
        input[type="number"],
        input[type="file"],
        select {
            width: calc(100% - 160px);
            padding: 8px;
            margin: 8px 0;
            box-sizing: border-box;
            border: 1px solid #ccc;
            border-radius: 4px;
            display: inline-block;
        }
        .price-input {
            width: calc(70% - 160px);
        }
        button {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #0069d9;
        }
        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f2f2f2;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
            padding-top: 60px;
        }
        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 50%;
            border-radius: 10px;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        .button-container {
            display: inline-block;
        }
    </style>

</head>
<body>
    <h1>Edit Inventory Item</h1>
    <form action="/admin/edit-inventory/<%= item.id %>" method="post" enctype="multipart/form-data">
        <label for="id">ID:</label>
        <input type="number" name="id" id="id" value="<%= item.id %>" />

        <label for="itemName">Item Name:</label>
        <input type="text" name="itemName" value="<%= item.itemName %>"><br>

        <label for="itemCategory">Item Category:</label>
        <input type="text" name="itemCategory" value="<%= item.itemCategory %>"><br>

        <label for="cost">Cost:</label>
        <input type="number" step="0.01" name="cost" value="<%= item.cost %>" class="price-input"><br>

        <label for="quantity">Quantity:</label>
        <input type="number" name="quantity" value="<%= item.quantity %>" class="price-input"><br>

        <label for="priceLevel1">Price Level 1:</label>
        <input type="number" step="0.01" name="priceLevel1" value="<%= item.priceLevel1 %>" class="price-input">


        <label for="priceLevel2">Price Level 2:</label>
        <input type="number" step="0.01" name="priceLevel2" value="<%= item.priceLevel2 %>" class="price-input">

        <label for="priceLevel3">Price Level 3:</label>
        <input type="number" step="0.01" name="priceLevel3" value="<%= item.priceLevel3 %>" class="price-input"><br>

        <div class="button-container">
            <button type="button" onclick="autoPriceRetail()">Auto Price Retail</button>
            <button type="button" onclick="vPackAutoPrice()">VPack Auto Price</button>
        </div><br>
        
        <label for="image">Item Image:</label>
        <input type="file" name="image"><br>
        <img src="<%= item.imageUrl %>" alt="<%= item.itemName %>" style="max-width: 200px;"><br>

        <label for="taxableItem">Taxable Item:</label>
        <select class="form-control" id="taxableItem" name="taxableItem">
            <option value="Yes" <%= item.taxableItem === true ? 'selected' : '' %>>Yes</option>
            <option value="No" <%= item.taxableItem !== true ? 'selected' : '' %>>No</option>
        </select>

        <h2>Vendors</h2>
        <% if (item.vendors && item.vendors.length > 0) { %>
            <table border="1">
                <thead>
                    <tr>
                        <th>Vendor Name</th>
                        <th>Price</th>
                        <th>Last Purchased</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% item.vendors.forEach((vendor, index) => { %>
                        <tr>
                            <td><%= vendor.name %></td>
                            <td><%= vendor.price %></td>
                            <td><%= vendor.lastPurchased %></td>
                            <td>
                                <button type="button" onclick="deleteVendor('<%= item.id %>', '<%= vendor.name %>')">Delete</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        <% } else { %>
            <p>No Vendors Added</p>
        <% } %>

        <button type="button" id="addVendorBtn">Add Vendor</button>
        <br><br>

        <label for="length">Length:</label>
        <input type="number" step="0.01" name="length" value="<%= item.length %>" />

        <label for="width">Width:</label>
        <input type="number" step="0.01" name="width" value="<%= item.width %>" />

        <label for="height">Height:</label>
        <input type="number" step="0.01" name="height" value="<%= item.height %>" />

        <label for="weight">Weight:</label>
        <input type="number" step="0.01" name="weight" value="<%= item.weight %>" />

        <label for="palletqty">Pallet Quantity:</label>
        <input type="number" name="palletqty" value="<%= item.palletqty %>" /><br>

        <button type="submit">Update Item</button>
        <button type="button" onclick="submitDuplicateForm('<%= item.id %>')">Duplicate</button>


        <button type="button" onclick="window.location.href='/admin/view-inventory'">Back to Inventory List</button>

    </form>
    
    <!-- Modal for adding a vendor -->
    <div id="addVendorModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Add Vendor</h2>
            <form id="addVendorForm">
                <label for="vendorName">Vendor Name:</label>
                <input type="text" id="vendorName" name="vendorName" required><br>
                <br>
                <label for="vendorPrice">Price:</label>
                <input type="number" id="vendorPrice" name="vendorPrice" step="0.01" required><br>
                <br>
                <button type="submit">Submit</button>
            </form>
        </div>
    </div>

    <script>
        function roundToNearestQuarter(value) {
            return (Math.round(value * 4) / 4).toFixed(2);
        }
        function autoPriceRetail() {
            const cost = parseFloat(document.querySelector('input[name="cost"]').value);
            document.querySelector('input[name="priceLevel1"]').value = roundToNearestQuarter(1.1 * cost + 0.25);
            document.querySelector('input[name="priceLevel2"]').value = roundToNearestQuarter(1.15 * cost + 0.5);
            document.querySelector('input[name="priceLevel3"]').value = roundToNearestQuarter(1.3 * cost + 1);
        }
        function vPackAutoPrice() {
            const cost = parseFloat(document.querySelector('input[name="cost"]').value);
            document.querySelector('input[name="priceLevel1"]').value = roundToNearestQuarter(1.15 * cost + 0.25);
            document.querySelector('input[name="priceLevel2"]').value = roundToNearestQuarter(1.25 * cost + 0.5);
            document.querySelector('input[name="priceLevel3"]').value = roundToNearestQuarter(1.45 * cost + 1);
        }
        // Get modal elements
        var modal = document.getElementById("addVendorModal");
        var btn = document.getElementById("addVendorBtn");
        var span = document.getElementsByClassName("close")[0];

        // Open the modal
        btn.onclick = function() {
            modal.style.display = "block";
        }

        // Close the modal
        span.onclick = function() {
            modal.style.display = "none";
        }

        // Close the modal when clicking outside
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        // Handle the form submission
        document.getElementById("addVendorForm").onsubmit = function(event) {
            event.preventDefault();

            // Get the form data
            const vendorName = document.getElementById("vendorName").value;
            const vendorPrice = document.getElementById("vendorPrice").value;

            // Send the form data to the server
            fetch('/admin/add-vendor/<%= item.id %>', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ vendorName, vendorPrice })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();  // Reload the page to show updated vendors
                } else {
                    alert('Failed to add vendor');
                }
            });
        }
        function submitDuplicateForm(itemId) {
        // Create a form element
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/admin/duplicate-inventory/${itemId}`;

        // Append the form to the body and submit it
        document.body.appendChild(form);
        form.submit();
    }
    function deleteVendor(itemId, vendorName) {
        fetch(`/admin/delete-vendor/${itemId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ vendorName })
        })
        .then(response => {
            if (response.ok) {
                window.location.reload(); // Reload the page to reflect the deletion
            } else {
                alert('Failed to delete vendor');
            }
        })
        .catch(error => {
            console.error('Error deleting vendor:', error);
            alert('An error occurred while deleting the vendor');
        });
    }
    app.post('/admin/delete-vendor/:id', (req, res) => {
    const itemId = parseInt(req.params.id);
    const { vendorName } = req.body;

    // Find the item in the inventory
    const itemIndex = inventory.findIndex(item => item.id === itemId);
    if (itemIndex === -1) {
        return res.status(404).send('Item not found');
    }

    // Remove the vendor with the specified name
    const currentItem = inventory[itemIndex];
    currentItem.vendors = currentItem.vendors.filter(vendor => vendor.name.trim() !== vendorName.trim());

    // Save the updated inventory to data.json
    saveData();

    res.status(200).send({ success: true });
});

    </script>
</body>
</html>