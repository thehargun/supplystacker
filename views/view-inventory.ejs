<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>View Inventory</title>
    <style>
        .dragging {
            background-color: #f0f0f0;
        }
    </style>
</head>
<body>
    <a href="/admin/add-inventory">Add New Inventory Item</a> | <a href="/admin">Back to Admin Dashboard</a>
    <h1>Inventory List</h1>
    <table>
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Item Category</th>
                <th>Cost</th>
                <th>Quantity</th>
                <th>Price Level 1</th>
                <th>Price Level 2</th>
                <th>Price Level 3</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="inventoryList">
            <% inventory.forEach(item => { %>
                <tr class="inventory-item" draggable="true" data-id="<%= item.id %>" data-category="<%= item.itemCategory %>">
                    <td><%= item.itemName %></td>
                    <td><%= item.itemCategory %></td>
                    <td><%= item.cost %></td>
                    <td><%= item.quantity %></td>
                    <td><%= item.priceLevel1 %></td>
                    <td><%= item.priceLevel2 %></td>
                    <td><%= item.priceLevel3 %></td>
                    <td><img src="<%= item.imageUrl %>" alt="<%= item.itemName %>" style="max-width: 100px;"></td>
                    <td>
                        <a href="/admin/edit-inventory/<%= item.id %>">Edit</a> | 
                        <a href="/admin/delete-inventory/<%= item.id %>" onclick="return confirm('Are you sure?');">Delete</a>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>

    <script>
        document.querySelectorAll('.inventory-item').forEach(item => {
            item.addEventListener('dragstart', function (e) {
                e.dataTransfer.setData('text/plain', e.target.dataset.id);
                e.target.classList.add('dragging');
            });

            item.addEventListener('dragend', function (e) {
                e.target.classList.remove('dragging');
            });

            item.addEventListener('dragover', function (e) {
                e.preventDefault();
            });

            item.addEventListener('drop', function (e) {
                e.preventDefault();
                const draggedItemId = e.dataTransfer.getData('text/plain');
                const draggedItem = document.querySelector(`.inventory-item[data-id='${draggedItemId}']`);
                const dropTargetCategory = e.target.closest('.inventory-item').dataset.category;
                const draggedItemCategory = draggedItem.dataset.category;

                // Ensure the dragged item stays within the same category
                if (dropTargetCategory === draggedItemCategory) {
                    this.closest('tbody').insertBefore(draggedItem, this.closest('tr').nextSibling);
                    saveNewOrder();
                } else {
                    alert('Items can only be reordered within the same category.');
                }
            });
        });

        function saveNewOrder() {
            const items = Array.from(document.querySelectorAll('.inventory-item')).map((item, index) => ({
                id: item.dataset.id,
                rank: index + 1 // Or any other logic you want to use to determine order
            }));

            fetch('/admin/update-inventory-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(items)
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      console.log('Order updated successfully.');
                  } else {
                      console.error('Failed to update order.');
                  }
              });
        }
    </script>
</body>
</html>
